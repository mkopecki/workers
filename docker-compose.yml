services:
  db:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: workers

  server:
    build:
      context: .
      dockerfile: packages/workers_server/Dockerfile
    ports:
      - "3000:3000"
    restart: always
    labels:
      - "traefik.http.routers.server.rule=Host(`${SERVER_HOST}`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.routers.server.entrypoints=websecure"
      - "traefik.http.routers.server.tls.certresolver=myresolver"
    environment:
      NODE_ENV: PRODUCTION
      DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/workers
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      CLIENT_HOST: ${CLIENT_HOST}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}

  client:
    build:
      context: .
      dockerfile: packages/workers_client/Dockerfile
      args:
        VITE_SERVER_HOST: ${VITE_SERVER_HOST}
    ports:
      - "3001:3000"
    restart: always
    labels:
      - "traefik.http.routers.client.rule=Host(`${CLIENT_HOST}`)"
      - "traefik.http.routers.client.entrypoints=web"
      - "traefik.http.services.client.loadbalancer.server.port=3000"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=myresolver"
    environment:
      NODE_ENV: PRODUCTION
      VITE_SERVER_HOST: ${VITE_SERVER_HOST}

  traefik:
    image: traefik:latest
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=maxim@mkopecki.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
